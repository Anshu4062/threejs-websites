import p from"node:path";import h from"node:fs/promises";import t from"node:process";import{hideBin as m}from"yargs/helpers";import d from"yargs";import{note as u,log as n,intro as g}from"@clack/prompts";import{inverse as y,redStylize as o,magentaStylize as b,dim as f}from"xycolors";import{highlight as x}from"./index.mjs";import"sugar-high";const v="cli-high",k="0.4.2",w="tiny cli highlighter",j="module",S=["cli","highlighter","highlight","color","terminal","console"],z="MIT",$="https://github.com/xinyao27/cli-high#readme",N={url:"https://github.com/xinyao27/cli-high/issues"},D={type:"git",url:"git+https://github.com/xinyao27/cli-high.git"},E={name:"xinyao",email:"hi@xinyao.me"},F="https://github.com/sponsors/xinyao27",I=["bin/*","dist/*","package.json"],L="./dist/index.cjs",O="./dist/index.mjs",T="./dist/index.d.ts",q={".":{types:"./dist/index.d.ts",require:"./dist/index.cjs",import:"./dist/index.mjs"}},B=!1,H="./bin/index.js",M={build:"unbuild",stub:"unbuild --stub",typecheck:"tsc --noEmit",lint:"nr typecheck && eslint . --fix",prepublishOnly:"nr build",release:"release-it",start:"bun run src/index.ts",test:"bun test",up:"taze major -I",prepare:"husky install"},_={"@clack/prompts":"^0.7.0","sugar-high":"^0.6.1",xycolors:"^0.1.1",yargs:"^17.7.2"},A={"@antfu/ni":"^0.21.12","@commitlint/cli":"^19.3.0","@release-it/conventional-changelog":"^8.0.1","@types/bun":"^1.1.3","@types/yargs":"^17.0.32","@xystack/style-guide":"^0.1.4",commitizen:"^4.3.0","cz-conventional-changelog":"^3.3.0",eslint:"^9.3.0",husky:"^9.0.11","lint-staged":"^15.2.4",prettier:"^3.2.5","release-it":"^17.3.0",taze:"^0.13.8",typescript:"^5.4.5",unbuild:"^2.0.0"},C="@xystack/style-guide/prettier",s={name:v,version:k,description:w,type:j,keywords:S,license:z,homepage:$,bugs:N,repository:D,author:E,funding:F,files:I,main:L,module:O,types:T,exports:q,sideEffects:B,bin:H,scripts:M,dependencies:_,devDependencies:A,prettier:C};function G(){console.log(`
`),g(`\u2728 ${b(`${s.name} `)}${f(`v${s.version}`)}`)}const J=d(m(t.argv)).scriptName("cli-high").usage("").command("*","Outputs a file or STDIN input with syntax highlighting",e=>e.option("showLineNumbers",{alias:"s",description:"Show line numbers",type:"boolean"}).help(),async e=>{const{_:r,showLineNumbers:c}=e;G();try{const i=p.join(t.cwd(),r[0].toString()),l=await h.readFile(i,"utf-8"),a=x(l,{showLineNumbers:c});u(a)}catch(i){n.error(y(o(" Failed to read file"))),n.error(o(`\u2718 ${String(i)}`)),t.exit(1)}}).showHelpOnFail(!1).alias("h","help").version("version",s.version).alias("v","version");J.help().argv;
