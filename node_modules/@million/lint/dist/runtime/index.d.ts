import { MountInfo } from '@million/shared/types/runtime';

declare const enum CaptureKind {
    ClassSetState = 0,
    Deps = 1,
    Props = 2,
    Value = 4,
    State = 8,
    JSX = 16,// input: compiler passes this into captureJSX
    JSXMount = 32,// output: these captures are product = "mount"
    JSXUpdate = 64,// output = "update" | "unmount"
    Function = 128,
    Error = 256,
    Baseline = 512,
    Note = 1024
}
declare const enum ProfilerType {
    NoRef = 0,
    Leaf = 1
}
declare const $$: (kind: CaptureKind, key: string, value: any, loc: number | null, secondaryLoc: number | null, locs: Array<number> | null, index: number | null, profilerType: ProfilerType | null, mountInfo: MountInfo | null) => any;
declare const useCapture: (value: any, key?: string, loc?: number, index?: number, mountInfo?: MountInfo) => any;
declare const reset: () => void;
declare const registerMetadata: (key: string, size: number, reference: (() => unknown) | null) => void;
declare const init: (options: {
    url?: string;
    id?: string;
    apiKey?: string;
    sessionId?: string;
} | undefined) => void;

export { $$, init, registerMetadata, reset, useCapture };
