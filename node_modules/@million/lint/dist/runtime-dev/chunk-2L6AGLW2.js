"use strict";Object.defineProperty(exports, "__esModule", {value: true});// runtime/src/core/utils/constants.ts
var _null = null;
var isSSR = typeof window === "undefined";
var _window = isSSR ? _null : window;
var _Map = Map;
var _Object = Object;
var _Array = Array;
var _isArray = _Array.isArray;
var _setTimeout = setTimeout;
var _performance = performance;
var _Function = Function;
var functionProto = _Function.prototype;
var mapProto = _Map.prototype;
var _mapHas = mapProto.has;
var _mapGet = mapProto.get;
var _mapSet = mapProto.set;
var objectPrototype = _Object.prototype;
var _objectHasOwnProperty = objectPrototype.hasOwnProperty;
var _objectToString = objectPrototype.toString;
var UNKNOWN = "<unknown>";
var VERSION = "0.0.74-faire.12";
var FLAG = "_ANYA_";
var MAX_QUEUE_SIZE = 1e4;
var FLUSH_TIMEOUT = true ? 50 : 5e3;
var SESSION_EXPIRE_TIMEOUT = FLUSH_TIMEOUT * 60;
var GZIP_MIN_LEN = 1e3;
var ENDPOINT = "https://lint.million.dev/api/v1/ingest";

// runtime/src/core/utils/on.ts
var debounce = (callback, timeout = 1e3) => {
  let timeoutId;
  return function() {
    if (timeoutId != _null) {
      clearTimeout(timeoutId);
    }
    timeoutId = _setTimeout(() => {
      callback.apply(null, arguments);
      timeoutId = void 0;
    }, timeout);
  };
};
var onIdle = (callback) => {
  if ("scheduler" in globalThis) {
    return _window.scheduler.postTask(callback, { priority: "background" });
  }
  if ("requestIdleCallback" in _window) {
    return requestIdleCallback(callback);
  }
  return _setTimeout(callback, 0);
};
var onHidden = (callback) => {
  const handler = (event) => {
    if (event.type === "pagehide" || document.visibilityState === "hidden") {
      callback();
    }
  };
  addEventListener("visibilitychange", handler, true);
  addEventListener("pagehide", handler, true);
};



























exports._null = _null; exports.isSSR = isSSR; exports._window = _window; exports._Map = _Map; exports._Object = _Object; exports._Array = _Array; exports._isArray = _isArray; exports._performance = _performance; exports.functionProto = functionProto; exports._mapHas = _mapHas; exports._mapGet = _mapGet; exports._mapSet = _mapSet; exports._objectHasOwnProperty = _objectHasOwnProperty; exports._objectToString = _objectToString; exports.UNKNOWN = UNKNOWN; exports.VERSION = VERSION; exports.FLAG = FLAG; exports.MAX_QUEUE_SIZE = MAX_QUEUE_SIZE; exports.FLUSH_TIMEOUT = FLUSH_TIMEOUT; exports.SESSION_EXPIRE_TIMEOUT = SESSION_EXPIRE_TIMEOUT; exports.GZIP_MIN_LEN = GZIP_MIN_LEN; exports.ENDPOINT = ENDPOINT; exports.debounce = debounce; exports.onIdle = onIdle; exports.onHidden = onHidden;
